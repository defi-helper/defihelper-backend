# Default values for backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

images:
  nginx:
    name: nginx
    resources:
      requests:
        memory: 128Mi
        cpu: 50m
      limits:
        memory: 384Mi
        cpu: 100m
  app:
    name: app
    resources:
      requests:
        memory: 128Mi
        cpu: 50m
      limits:
        memory: 384Mi
        cpu: 100m

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx-ingress"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "360"
  hosts:
    - host: backend-dev.defihelper.info
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: backend-tls
      hosts:
        - backend-dev.defihelper.info

broker:
  process:
    labels:
      app: app
      component: broker
      environment: prod
      queue: process
    queues:
      queue:
        name: queue
        command: '"npm","run","queue:consume","--","-q","tasks_default"'
        replicas: 1
        maxReplicas: 10
        maxReadyMessagesForHpa: 25
        resources:
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: 512Mi
            cpu: 100m
        graceperiod: 3600
        nodeSelector:
          group_name: "service"
        tolerations:
          - key: node-role.kubernetes.io/service
            operator: "Equal"
            value: "true"
            effect: NoSchedule
      events-smart-trade:
        name: events-smart-trade
        command: '"npm","run","smartTrade:event"'
        replicas: 1
        maxReplicas: 20
        maxReadyMessagesForHpa: 100
        resources:
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 100m
        graceperiod: 3600
        nodeSelector:
          group_name: "service"
        tolerations:
          - key: node-role.kubernetes.io/service
            operator: "Equal"
            value: "true"
            effect: NoSchedule
      events-trigger:
        name: events-trigger
        command: '"npm","run","trigger:event"'
        replicas: 1
        maxReplicas: 20
        maxReadyMessagesForHpa: 100
        resources:
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 100m
        graceperiod: 3600
        nodeSelector:
          group_name: "service"
        tolerations:
          - key: node-role.kubernetes.io/service
            operator: "Equal"
            value: "true"
            effect: NoSchedule
      trigger:
        name: trigger
        command: '"npm","run","queue:consume","--","-q","tasks_trigger"'
        replicas: 1
        maxReplicas: 20
        maxReadyMessagesForHpa: 100
        resources:
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 100m
        graceperiod: 3600
        nodeSelector:
          group_name: "service"
        tolerations:
          - key: node-role.kubernetes.io/service
            operator: "Equal"
            value: "true"
            effect: NoSchedule
      metrics:
        name: metrics
        command: '"npm","run","queue:consume","--","-q","tasks_metricCurrent"'
        replicas: 1
        maxReplicas: 20
        maxReadyMessagesForHpa: 100
        resources:
          requests:
            memory: 192Mi
            cpu: 50m
          limits:
            memory: 512Mi
            cpu: 100m
        graceperiod: 3600
        nodeSelector:
          group_name: "service"
        tolerations:
          - key: node-role.kubernetes.io/service
            operator: "Equal"
            value: "true"
            effect: NoSchedule
      history:
        name: history
        command: '"npm","run","queue:consume","--","-q","tasks_metricHistory"'
        replicas: 1
        maxReplicas: 20
        maxReadyMessagesForHpa: 100
        resources:
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 100m
        graceperiod: 3600
        nodeSelector:
          group_name: "service"
        tolerations:
          - key: node-role.kubernetes.io/service
            operator: "Equal"
            value: "true"
            effect: NoSchedule
      telegram-bot:
        name: telegram-bot
        command: '"npm","run","telegram:bot"'
        replicas: 1
        maxReplicas: 1
        maxReadyMessagesForHpa: 5
        resources:
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 100m
        graceperiod: 3600
        nodeSelector:
          group_name: "service"
        tolerations:
          - key: node-role.kubernetes.io/service
            operator: "Equal"
            value: "true"
            effect: NoSchedule

handlers:
  labels:
    app: backend
    component: cronHandler
    environment: prod
  nodeSelector:
    group_name: "service"
  tolerations:
    - key: node-role.kubernetes.io/service
      operator: "Equal"
      value: "true"
      effect: NoSchedule
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 128Mi
      cpu: 100m
  schedules:
    queue-deferred:
      command: '"npm","run","queue:deferred"'
      schedule: "* * * * *"

migrator:
  labels:
    app: migrator
    component: migrator
    environment: dev
  nodeSelector:
    group_name: "service"
  tolerations:
    - key: node-role.kubernetes.io/service
      operator: "Equal"
      value: "true"
      effect: NoSchedule
  resources:
    requests:
      memory: 128Mi
      cpu: 200m
    limits:
      memory: 256Mi
      cpu: 1200m

resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
nodeSelector:
  group_name: "service"
tolerations:
  - key: node-role.kubernetes.io/service
    operator: "Equal"
    value: "true"
    effect: NoSchedule
affinity: {}
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name: ""
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
